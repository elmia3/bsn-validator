image: maven:3.9.9-eclipse-temurin-17

stages: [build, test, quality, package, docker, deploy]

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths: [.m2/repository]

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "-B -V --no-transfer-progress"
  GIT_DEPTH: "0"

build-job:
  stage: build
  tags: [hva]
  script: mvn $MAVEN_CLI_OPTS -DskipTests clean compile
  rules:
    - exists: [pom.xml]

test-job:
  stage: test
  tags: [hva]
  script: mvn $MAVEN_CLI_OPTS test

quality-sonar:
  stage: quality
  tags: [hva]
  needs: ["test-job"]
  script: >
    mvn $MAVEN_CLI_OPTS verify
    org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar
    -Dsonar.host.url=${SONAR_HOST_URL}
    -Dsonar.login=${SONAR_TOKEN}
    -Dsonar.projectKey=${SONAR_PROJECT_KEY}
    -Dsonar.qualitygate.wait=true
  artifacts:
    when: always
    paths: [target/site/jacoco/index.html]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

package-job:
  stage: package
  tags: [hva]
  needs: ["quality-sonar"]
  script: mvn $MAVEN_CLI_OPTS -DskipTests package
  artifacts:
    when: always
    paths: [target/*.jar]
    expire_in: 1 week

docker-build-push:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2
    entrypoint: [""]
  tags: [hva]
  needs: ["package-job"]
  variables:
    DOCKER_CONFIG: /kaniko/.docker/
  before_script:
    # Prepare Docker Hub authentication for Kaniko
    - mkdir -p /kaniko/.docker
    - |
      echo '{
        "auths": {
          "https://index.docker.io/v1/": {
            "auth": "'$(echo -n "$DOCKERHUB_USERNAME:$DOCKERHUB_TOKEN" | base64 -w0)'"
          }
        }
      }' > /kaniko/.docker/config.json
  script:
    # Build & push the image
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${DOCKERHUB_USERNAME}/bsn-validator:${CI_COMMIT_SHORT_SHA}"

    # Tag & push dev/test images when on main
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        for tag in dev test; do
          /kaniko/executor \
            --context "${CI_PROJECT_DIR}" \
            --dockerfile "${CI_PROJECT_DIR}/Dockerfile" \
            --destination "${DOCKERHUB_USERNAME}/bsn-validator:${tag}"
        done
      fi
  rules:
    - if: $CI_COMMIT_BRANCH == "main"



.deploy-template:
  image: curlimages/curl:8.10.1
  tags: [hva]
  script: 'curl -fsSL -X POST "$RENDER_HOOK_URL" -d "{}"'
  environment:
    name: $ENV_NAME
    url: $ENV_URL

deploy:dev:
  stage: deploy
  extends: .deploy-template
  needs: ["docker-build-push"]
  variables:
    RENDER_HOOK_URL: $RENDER_DEV_HOOK_URL
    ENV_NAME: development
    ENV_URL: $RENDER_DEV_URL
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy:test:
  stage: deploy
  extends: .deploy-template
  needs: ["docker-build-push"]
  variables:
    RENDER_HOOK_URL: $RENDER_TEST_HOOK_URL
    ENV_NAME: test
    ENV_URL: $RENDER_TEST_URL
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy:acc:
  stage: deploy
  extends: .deploy-template
  needs: ["docker-build-push"]
  when: manual
  allow_failure: false
  variables:
    RENDER_HOOK_URL: $RENDER_ACC_HOOK_URL
    ENV_NAME: acceptance
    ENV_URL: $RENDER_ACC_URL
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy:prod:
  stage: deploy
  extends: .deploy-template
  needs: ["docker-build-push"]
  when: manual
  allow_failure: false
  variables:
    RENDER_HOOK_URL: $RENDER_PROD_HOOK_URL
    ENV_NAME: production
    ENV_URL: $RENDER_PROD_URL
  rules:
    - if: $CI_COMMIT_TAG
